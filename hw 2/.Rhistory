install.packages(c('rpart','rpart.plot'))
frameingham <- read.csv{"framingham.csv"}
frameingham <- read.csv("framingham.csv")
frameingham <- read.csv("\framingham.csv")
framingham <- read.csv("\framingham.csv")
getwd()
setwd("C:\\Users\\Aditya Peshin\\Desktop\\Studies\\UC Berkeley\\Fall 2019\\242 - Applications in Data Analysis\\Assignments\\hw 2")
;
setwd("C:\\Users\\Aditya Peshin\\Desktop\\Studies\\UC Berkeley\\Fall 2019\\242 - Applications in Data Analysis\\Assignments\\hw 2")
getwd()
framingham <- read.csv("\framingham.csv")
framingham <- read.csv("framingham.csv")
View(framingham)
install.packages("caTools")
?split()
split <- sample.split(framingham$TenYearCHD, 0.7)
?sample.split()
library(dplyr)
library(ggplot2)
library(caTools) # splits
library(rpart) # CART
library(rpart.plot) # CART plotting
split <- sample.split(framingham$TenYearCHD, 0.7)
framingham.train <- filter(framingham, split == TRUE)
framingham.test <- filter(framingham, split == FALSE)
2561/3658
1097/3658
table(framingham.train$TenYearCHD)
table(framingham.test$TenYearCHD)
?glm
?ggscatmat
??ggscatmat
?glm
View(framingham.test)
mod1 <- glm(TenYearCHD ~ . , data = framingham.train)
summary(mod1)
summary(mod1)
summary(mod1)
library(ggplot2)
ggscatmat(framingham.train)
library(dplyr)
library(ggplot2)
library(caTools) # splits
library(rpart) # CART
library(rpart.plot) # CART plotting
library(GGally)
library(ROCR)
ggscatmat(framingham.train)
ggscatmat(framingham.train)
library(dplyr)
library(ggplot2)
library(caTools) # splits
library(rpart) # CART
library(rpart.plot) # CART plotting
library(GGally)
library(ROCR)
library(dplyr)
library(ggplot2)
library(caTools) # splits
library(rpart) # CART
library(rpart.plot) # CART plotting
library(GGally)
#reading in the file
framingham <- read.csv("framingham.csv")
# setting the factor variables as factors
framingham$TenYearCHD <- as.factor(framingham$TenYearCHD)
framingham$male <- as.factor(framingham$male)
framingham$currentSmoker <- as.factor(framingham$currentSmoker)
framingham$BPMeds <- as.factor(framingham$BPMeds)
framingham$prevalentStroke <- as.factor(framingham$prevalentStroke)
framingham$prevalentHyp <- as.factor(framingham$prevalentHyp)
framingham$diabetes <- as.factor(framingham$diabetes)
framingham$education <- as.factor(framingham$education)
#splitting the data into training and testing
split <- sample.split(framingham$TenYearCHD, 0.7)
framingham.train <- filter(framingham, split == TRUE)
framingham.test <- filter(framingham, split == FALSE)
mod1 <- glm(TenYearCHD ~ . , data = framingham.train)
mod1 <- glm(TenYearCHD ~ . , data = framingham.train, family = binomial)
summary(mod1)
install.packages("ROCR")
library(ROCR)
install.packages("ROCR")
pred_CHD = predict(mod1 , newdata = framingham.test, type = "response")
summary(pred_CHD)
# confusion matrix for training data
table (framingham.test$TenYearCHD, pred_CHD>= 0.16)
?table
install.packages("caret")
library(caret)
confusionMatrix(pred_CHD>= 0.16, framingham.test$TenYearCHD)
confusionMatrix(as.factor(pred_CHD>= 0.16), framingham.test$TenYearCHD)
# confusion matrix for training data
table (framingham.test$TenYearCHD, pred_CHD>= 0.16)
# confusion matrix for baseline model
table (framingham.test$TenYearCHD, pred_CHD>= 1)
# Probability that the new patient has the disease 10 years from now
new_patient <- data.frame(male1 = '0', age = 51, education = "College", currentSmoker1 = '1', cigsPerDay = 20, BPMeds1 = '0', prevalentStroke1 = '0',prevalentHyp1 = '1', diabetes1 = '0', totChol = 220, sysBP = 140, diaBP = 100, BMI = 31, heartRate = 59, glucose = 78)
predict(mod1, new_patient, type = "response")
# Probability that the new patient has the disease 10 years from now
new_patient <- data.frame(male = '0', age = 51, education = "College", currentSmoker = '1', cigsPerDay = 20, BPMeds = '0', prevalentStroke = '0',prevalentHyp = '1', diabetes = '0', totChol = 220, sysBP = 140, diaBP = 100, BMI = 31, heartRate = 59, glucose = 78)
predict(mod1, new_patient, type = "response")
# Plotting a ROC curve for the model
pred <- prediction(framingham.test$TenYearCHD , pred_CHD)
# Plotting a ROC curve for the model
pred <- prediction(pred_CHD, framingham.test$TenYearCHD)
perf <- performance(pred, measure = "tpr", x.measure = "fpr")
plot(perf, col = rainbow(10))
plot(perf, col = rainbow(1))
plot(perf, col = rainbow(100))
plot(perf, col = rainbow(0.1))
plot(perf, col = rainbow(1))
plot(perf, col = rainbow(12))
plot(perf, col = "blue")
plot(perf, col = "rgb")
plot(perf, col = "PuBu")
plot(perf, col = "YlOrRd")
plot(perf, col = "Yl")
plot(perf, col = "Blue")
plot(perf, col = "Blue")
auc <- performance(pred, measure = "auc")
auc <- auc@y.values[[1]]
auc
save.image("C:/Users/Aditya Peshin/Desktop/Studies/UC Berkeley/Fall 2019/242 - Applications in Data Analysis/Assignments/hw 2/hw2q3.RData")
# loading required libraries
library(dplyr)
library(ggplot2)
library(caTools)
library(GGally)
library(ROCR)
# reading in the file
framingham <- read.csv("framingham.csv")
# setting the factor variables as factors
framingham$TenYearCHD <- as.factor(framingham$TenYearCHD)
framingham$male <- as.factor(framingham$male)
framingham$currentSmoker <- as.factor(framingham$currentSmoker)
framingham$BPMeds <- as.factor(framingham$BPMeds)
framingham$prevalentStroke <- as.factor(framingham$prevalentStroke)
framingham$prevalentHyp <- as.factor(framingham$prevalentHyp)
framingham$diabetes <- as.factor(framingham$diabetes)
framingham$education <- as.factor(framingham$education)
# splitting the data into training and testing
split <- sample.split(framingham$TenYearCHD, 0.7)
framingham.train <- filter(framingham, split == TRUE)
framingham.test <- filter(framingham, split == FALSE)
# using logistic regression to make model
mod1 <- glm(TenYearCHD ~ . , data = framingham.train, family = binomial)
summary(mod1)
# making a prediction on the test data
pred_CHD = predict(mod1 , newdata = framingham.test, type = "response")
# confusion matrix for training data
table (framingham.test$TenYearCHD, pred_CHD>= 0.16)
# confusion matrix for baseline model
table (framingham.test$TenYearCHD, pred_CHD>= 1)
# Probability that the new patient has the disease 10 years from now
new_patient <- data.frame(male = '0', age = 51, education = "College", currentSmoker = '1', cigsPerDay = 20, BPMeds = '0', prevalentStroke = '0',prevalentHyp = '1', diabetes = '0', totChol = 220, sysBP = 140, diaBP = 100, BMI = 31, heartRate = 59, glucose = 78)
predict(mod1, new_patient, type = "response")
summary(framingham)
# reading in the file
framingham <- read.csv("framingham.csv")
str(framingham)
# setting the factor variables as factors
framingham$TenYearCHD <- as.factor(framingham$TenYearCHD)
framingham$male <- as.factor(framingham$male)
framingham$currentSmoker <- as.factor(framingham$currentSmoker)
framingham$BPMeds <- as.factor(framingham$BPMeds)
framingham$prevalentStroke <- as.factor(framingham$prevalentStroke)
framingham$prevalentHyp <- as.factor(framingham$prevalentHyp)
framingham$diabetes <- as.factor(framingham$diabetes)
framingham$education <- as.factor(framingham$education)
str(framingham)
# splitting the data into training and testing
split <- sample.split(framingham$TenYearCHD, 0.7)
framingham.train <- filter(framingham, split == TRUE)
framingham.test <- filter(framingham, split == FALSE)
# using logistic regression to make model
mod1 <- glm(TenYearCHD ~ . , data = framingham.train, family = binomial)
summary(mod1)
# reading in the file
framingham <- read.csv("framingham.csv")
str(framingham)
# setting the factor variables as factors
framingham$TenYearCHD <- as.factor(framingham$TenYearCHD)
framingham$male <- as.factor(framingham$male)
framingham$currentSmoker <- as.factor(framingham$currentSmoker)
framingham$BPMeds <- as.factor(framingham$BPMeds)
framingham$prevalentStroke <- as.factor(framingham$prevalentStroke)
framingham$prevalentHyp <- as.factor(framingham$prevalentHyp)
framingham$diabetes <- as.factor(framingham$diabetes)
framingham$education <- as.factor(framingham$education)
# splitting the data into training and testing
set.seed(144)
split <- sample.split(framingham$TenYearCHD, 0.7)
framingham.train <- filter(framingham, split == TRUE)
framingham.test <- filter(framingham, split == FALSE)
# using logistic regression to make model
mod1 <- glm(TenYearCHD ~ . , data = framingham.train, family = binomial)
summary(mod1)
# using logistic regression to make model
mod1 <- glm(TenYearCHD ~ . , data = framingham.train, family = binomial)
summary(mod1)
summary(mod1)
# making a prediction on the test data
pred_CHD = predict(mod1 , newdata = framingham.test, type = "response")
# confusion matrix for training data
table (framingham.test$TenYearCHD, pred_CHD>= 0.16)
# confusion matrix for baseline model
table (framingham.test$TenYearCHD, pred_CHD>= 1)
637+293+56+111
# Probability that the new patient has the disease 10 years from now
new_patient <- data.frame(male = '0', age = 51, education = "College", currentSmoker = '1', cigsPerDay = 20, BPMeds = '0', prevalentStroke = '0',prevalentHyp = '1', diabetes = '0', totChol = 220, sysBP = 140, diaBP = 100, BMI = 31, heartRate = 59, glucose = 78)
predict(mod1, new_patient, type = "response")
# Plotting a ROC curve for the model
pred <- prediction(pred_CHD, framingham.test$TenYearCHD)
perf <- performance(pred, measure = "tpr", x.measure = "fpr")
plot(perf, col = "Blue")
auc <- performance(pred, measure = "auc")
auc <- auc@y.values[[1]]
auc     # to print value of AUC
# Probability that the new patient has the disease 10 years from now
new_patient <- data.frame(male = '0', age = 51, education = "College", currentSmoker = '1', cigsPerDay = 20, BPMeds = '0', prevalentStroke = '0',prevalentHyp = '1', diabetes = '0', totChol = 220, sysBP = 140, diaBP = 100, BMI = 31, heartRate = 59, glucose = 78)
predict(mod1, new_patient, type = "response")
auc <- performance(pred, measure = "auc")
auc <- auc@y.values[[1]]
auc     # to print value of AUC
summary(mod1)
# confusion matrix for training data
table (framingham.test$TenYearCHD, pred_CHD>= 0.16)
# confusion matrix for baseline model
table (framingham.test$TenYearCHD, pred_CHD>= 1)
